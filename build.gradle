plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    //id 'com.github.hierynomus.license' version '0.15.0'
}

group 'org.novah'
version '0.1'

repositories {
    mavenCentral()
}

def kotestVersion = '5.1.0'
def mavenResolverVersion = '1.7.3'

sourceSets.main.java.srcDirs = ['src/main/java', 'src/main/javaLib']

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10'
    implementation "org.ow2.asm:asm:9.2"
    implementation 'com.github.ajalt.clikt:clikt:3.4.0'
    implementation "io.lacuna:bifurcan:0.2.0-alpha6"
    implementation "org.reflections:reflections:0.9.12"
    implementation "org.eclipse.lsp4j:org.eclipse.lsp4j:0.12.0"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.+"
    implementation 'org.commonmark:commonmark:0.18.2'
    
    // maven
    implementation "org.apache.maven.resolver:maven-resolver-api:$mavenResolverVersion"
    implementation "org.apache.maven.resolver:maven-resolver-spi:$mavenResolverVersion"
    implementation "org.apache.maven.resolver:maven-resolver-impl:$mavenResolverVersion"
    implementation "org.apache.maven.resolver:maven-resolver-connector-basic:$mavenResolverVersion"
    implementation "org.apache.maven.resolver:maven-resolver-transport-file:$mavenResolverVersion"
    implementation "org.apache.maven.resolver:maven-resolver-transport-http:$mavenResolverVersion"
    implementation "org.apache.maven:maven-core:3.8.4"
    implementation "org.apache.maven:maven-resolver-provider:3.8.4"
    implementation "org.slf4j:slf4j-nop:1.7.36"


    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-property-jvm:$kotestVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

application {
    mainClass.set("novah.main.Main")
}

shadowJar {
    mainClassName = "novah.main.Main"
}

test {
    useJUnitPlatform()
}

//license {
//    header = file('HEADER')
//
//    exclude "**/*.txt"
//    exclude "**/gradlew"
//    exclude "src/test/**/*.novah"
//}