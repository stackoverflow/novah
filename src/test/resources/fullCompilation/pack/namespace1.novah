module pack.namespace1

typealias Pri = Int

pub
typealias Foo = Pri

fun1 : String -> Int
fun1 x = do
  println x
  42

pub
sayHello : String -> Unit
sayHello name = do
  println "Hello"
  println name

opaque type Show a = { show : a -> String }

pub
show : {{ Show a }} -> a -> String
show {{Show s}} x = s.show x

pub instance
showInt : Show Int
showInt = Show { show: (\x -> toString x) : Int -> String }

pub instance
showBool : Show Boolean
showBool = Show { show: (\x -> toString x) : Boolean -> String }

showOptionImpl : {{ Show a }} -> Option a -> String
showOptionImpl {{s}} o = case o of
  Some x -> show x
  None -> "None"

instance
showOption : {{ Show a }} -> Show (Option a)
showOption {{s}} = Show { show: showOptionImpl {{s}} }

printx : {{ Show a }} -> Option a -> Unit
printx {{s}} o = do
  println (show 5)
  println (show false)
  println (show o)

pub
main : Array String -> Unit
main _ =
  printx (Some (Some 3))