module test

import novah.list (::, List(..))
import novah.map as M
import novah.test

foreign import java.util.Arrays:toString(Array) as toStringArr

vector =
  { bind: flip Vector.flatMap
  , return: \x -> [x]
  , zero: []
  }

foo = do.vector
  let! x = 1 .. 5
  let! y = 7 .. 14
  if odd (x + y) then return (x <> y)

toStr : Array a -> String
toStr arr = toStringArr (unsafeCast arr)

myTest : Unit -> Unit
myTest () =
  2 == 2 |> assert "2 != 2"
  2 == 3 |> assert "2 != 3"

goodTest : TestFun
goodTest () =
  println foo
  1 == 1 |> assert "1 == 1"

pub
main : Array String -> Unit
main _ =
  runTests
    [ Test "let's see" myTest
    , Test "should work" goodTest
    ]