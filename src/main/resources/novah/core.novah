/**
 * The core functions of the language.
 * Imported automatically in every module.
 */
module novah.core

foreign import get java.lang.System:out
foreign import java.io.PrintStream.println(Object) as jprintln
foreign import java.io.PrintStream.print(Object) as jprint
foreign import Object.toString() as jToString
foreign import Object.hashCode() as jHashCode

foreign import type novah.Core
foreign import Core:not(Boolean) as negate
foreign import Core:mkByteArray(Int32)
foreign import Core:mkShortArray(Int32)
foreign import Core:mkIntArray(Int32)
foreign import Core:mkLongArray(Int32)
foreign import Core:mkFloatArray(Int32)
foreign import Core:mkDoubleArray(Int32)
foreign import Core:mkCharArray(Int32)
foreign import Core:mkBooleanArray(Int32)

/**
 * A 32-bits Integer
 */
pub
typealias Int = Int32

/**
 * A 64-bits floating point.
 */
pub
typealias Float = Float64

/**
 * Negates a boolean value.
 */
pub
not : Boolean -> Boolean
not b = negate b

/**
 * Prints x to the stdout and appends a new line.
 */
pub
println : forall a. a -> Unit
println x = jprintln out (unsafeCast x)

/**
 * Prints x to the stdout.
 */
pub
print : forall a. a -> Unit
print x = jprint out (unsafeCast x)

/**
 * Converts a value to String using the
 * native Java toString method.
 */
pub
toString : forall a. a -> String
toString x = jToString (unsafeCast x)

/**
 * Returns the hash code for this value using
 * the native Java hashCode method.
 */
pub
hashCode : forall a. a -> Int32
hashCode x = jHashCode (unsafeCast x)

/**
 * Creates a byte array of size [size].
 */
pub
byteArray : Int -> ByteArray
byteArray size = mkByteArray size

/**
 * Creates a int16 array of size [size].
 */
pub
int16Array : Int -> Int16Array
int16Array size = mkShortArray size

/**
 * Creates a int32 array of size [size].
 */
pub
intArray : Int -> Int32Array
intArray size = mkIntArray size

/**
 * Creates a int64 array of size [size].
 */
pub
int64Array : Int -> Int64Array
int64Array size = mkLongArray size

/**
 * Creates a float32 array of size [size].
 */
pub
floatArray : Int -> Float32Array
floatArray size = mkFloatArray size

/**
 * Creates a float64 array of size [size].
 */
pub
float64Array : Int -> Float64Array
float64Array size = mkDoubleArray size

/**
 * Creates a char array of size [size].
 */
pub
charArray : Int -> CharArray
charArray size = mkCharArray size

/**
 * Creates a boolean array of size [size].
 */
pub
booleanArray : Int -> BooleanArray
booleanArray size = mkBooleanArray size