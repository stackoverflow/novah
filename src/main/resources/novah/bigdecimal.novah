// Functions for creating and manipulating BigDecimals
module novah.bigdecimal

foreign import java.lang.ArithmeticException

// Returns a new BigDecimal represented by this int64
pub
fromInt64 : Int64 -> BigDecimal
fromInt64 n = BigDecimal#new(n)

// Returns a new BigDecimal represented by this int
pub
fromInt : Int -> BigDecimal
fromInt n = BigDecimal#new(n)

// Returns a new BigDecimal represented by this string
pub
fromString : String -> BigDecimal
fromString str = BigDecimal#new(str)

// Returns a new BigDecimal represented by this float64
pub
fromFloat64 : Float64 -> BigDecimal
fromFloat64 n = BigDecimal#new(n)

// Returns a new BigDecimal represented by this BigInteger
pub
fromBigInt : BigInteger -> BigDecimal
fromBigInt n = BigDecimal#new(n)

// Returns a new BigDecimal whose value is -this
pub
negate : BigDecimal -> BigDecimal
negate i = i#negate()

// Returns a BigDecimal whose value is this ^ exponent
pub
pow : Int32 -> BigDecimal -> BigDecimal
pow exp i = i#pow(exp)

// Returns a byte representing this BigDecimal if it fits
pub
toByte : BigDecimal -> Option Byte
toByte i =
  try
    Some i#byteValueExact()
  catch
    :? ArithmeticException -> None

// Returns an int16 representing this BigDecimal if it fits
pub
toInt16 : BigDecimal -> Option Int16
toInt16 i =
  try
    Some i#shortValueExact()
  catch
    :? ArithmeticException -> None

// Returns an int representing this BigDecimal if it fits
pub
toInt : BigDecimal -> Option Int32
toInt i =
  try
    Some i#intValueExact()
  catch
    :? ArithmeticException -> None

// Returns an int64 representing this BigDecimal if it fits
pub
toInt64 : BigDecimal -> Option Int64
toInt64 i =
  try
    Some i#longValueExact()
  catch
    :? ArithmeticException -> None