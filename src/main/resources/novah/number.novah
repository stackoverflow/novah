module novah.number

foreign import java.lang.NumberFormatException

/**
 * A constant representing Not-a-Number (Float64)
 */
pub
nan : Float64
nan =
  Float64#-"NaN"

/**
 * A constant representing Not-a-Number (Float32)
 */
pub
nanf : Float32
nanf =
  Float32#-"NaN"

/**
 * A constant representing the positive infinity (Float64)
 */
pub
positiveInfinity : Float64
positiveInfinity =
  Float64#-"POSITIVE_INFINITY"

/**
 * A constant representing the negative infinity (Float64)
 */
pub
negativeInfinity : Float64
negativeInfinity =
  Float64#-"NEGATIVE_INFINITY"

/**
 * A constant representing the positive infinity (Float32)
 */
pub
positiveInfinityF : Float32
positiveInfinityF =
  Float32#-"POSITIVE_INFINITY"

/**
 * A constant representing the negative infinity (Float32)
 */
pub
negativeInfinityF : Float32
negativeInfinityF =
  Float32#-"NEGATIVE_INFINITY"

/**
 * Tries to parse a string to an int in base 10.
 */
pub
parseInt : String -> Option Int32
parseInt str =
  try
    Some Int32#parseInt(str)
  catch
    :? NumberFormatException -> None

/**
 * Tries to parse a string to an int in base `radix`.
 */
pub
parseIntRadix : String -> Int32 -> Option Int32
parseIntRadix str radix =
  try
    Some Int32#parseInt(str, radix)
  catch
    :? NumberFormatException -> None

/**
 * Tries to parse a string to an int64 in base 10.
 */
pub
parseInt64 : String -> Option Int64
parseInt64 str =
  try
    Some Int64#parseLong(str)
  catch
    :? NumberFormatException -> None

/**
 * Tries to parse a string to an int64 in base `radix`.
 */
pub
parseInt64Radix : String -> Int32 -> Option Int64
parseInt64Radix str radix =
  try
    Some Int64#parseLong(str, radix)
  catch
    :? NumberFormatException -> None

/**
 * Tries to parse a string to an float32.
 */
pub
parseFloat32 : String -> Option Float32
parseFloat32 str =
  try
    Some Float32#parseFloat(str)
  catch
    :? NumberFormatException -> None

/**
 * Tries to parse a string to an float64.
 */
pub
parseFloat64 : String -> Option Float64
parseFloat64 str =
  try
    Some Float64#parseDouble(str)
  catch
    :? NumberFormatException -> None