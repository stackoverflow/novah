module novah.vector

foreign import type java.util.function.Function
foreign import type novah.Core

foreign import Core:mapVector(Function, Vector) as vecMap

/**
 * Maps function f over all elements of this Vector
 * returning a Vector of the same size.
 * Runtime: O(n)
 */
pub
map : (a -> b) -> Vector a -> Vector b
map f vec = vecMap (unsafeCoerce f) (unsafeCoerce vec) |> unsafeCast

/**
 * Returns Some value at index for this Vector if it exists or None.
 * This is a safe version of !
 * Runtime: ~O(1)
 */
pub
nth : Int64 -> Vector a -> Option a
nth index vec =
  let size = count vec
  in if index < 0L || index > size
     then None
     else Some (vec ! index)