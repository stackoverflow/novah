/**
 * Functions for Java interoperability.
 */
module novah.java

foreign import type java.lang.Class
foreign import type java.lang.System
foreign import type java.util.Iterator
foreign import type java.util.Comparator
foreign import type java.util.function.Consumer
foreign import type java.util.function.Predicate
foreign import type java.util.function.BiPredicate
foreign import type java.util.function.BiFunction
foreign import type java.util.function.BinaryOperator
foreign import type java.util.function.UnaryOperator
foreign import type java.util.function.ToLongFunction
foreign import type java.util.function.ToIntFunction
foreign import type novah.Core

foreign import Object.getClass()
foreign import Object.hashCode() as jHashCode
foreign import Object.equals(Object) as jEquals
foreign import System:exit(Int32) as jExit
foreign import Iterator.hasNext()
foreign import Iterator.next()
foreign import new java.lang.AssertionError(String) as newAssertionError
foreign import Core:makeComparator(Function)
foreign import Core:makeConsumer(Function)
foreign import Core:makePredicate(Function)
foreign import Core:makeBiPredicate(Function)
foreign import Core:makeToLongFunction(Function)
foreign import Core:makeToIntFunction(Function)
foreign import Core:makeBinaryOperator(Function)
foreign import Core:makeUnaryOperator(Function)
foreign import Core:makeBiFunction(Function)

/**
 * Returns the Java class of this object.
 */
pub
class : a -> Class a
class obj = unsafeCast (getClass (unsafeCast obj))

/**
 * Returns the hash code for this value using
 * the native Java `hashCode` method of x.
 */
pub
hashCode : a -> Int32
hashCode x = jHashCode (unsafeCast x)

/**
 * Returns true if x is equals y using
 * the native Java `equals` method of x.
 */
pub
equals : a -> a -> Boolean
equals x y = jEquals (unsafeCast x) (unsafeCast y)

/**
 * Throws an assetion error if the condition is false.
 */
pub
assert : Boolean -> String -> Unit
assert cond msg =
  if cond
  then ()
  else throw newAssertionError (format "Assert failed: %s" [msg])

/**
 * Executes the function for each value in this iterator.
 * Runtime: O(n)
 */
pub
forEach : Iterator a -> (a -> Unit) -> Unit
forEach it fun =
  while hasNext it do
    fun (next it)

/**
 * Terminates the currently running JVM with the given status.
 * A status different from 0 indicates abnormal termination.
 */
pub
exit : Int32 -> Unit
exit status = jExit status

/**
 * Returns a `java.util.Comparator` based on this Ord instance.
 */
pub
toComparator : Ord a -> Comparator a
toComparator (Ord _ cmp) =
  makeComparator \x y -> case cmp.compare x y of
    LT -> -1
    EQ -> 0
    GT -> 1

/**
 * Creates a `java.util.function.Consumer` out of this function, ignoring the result.
 */
pub
consumer : (a -> b) -> Consumer a
consumer f = makeConsumer f

/**
 * Creates a `java.util.function.Predicate` out of this function.
 */
pub
predicate : (a -> Boolean) -> Predicate a
predicate f = makePredicate f

/**
 * Creates a `java.util.function.BiPredicate` out of this function.
 */
pub
bipredicate : (a -> b -> Boolean) -> BiPredicate a b
bipredicate f = makeBiPredicate f

/**
 * Creates a `java.util.function.ToLongFunction` out of this function.
 */
pub
toLong : (a -> Int64) -> ToLongFunction a
toLong f = makeToLongFunction f

/**
 * Creates a `java.util.function.ToIntFunction` out of this function.
 */
pub
toInt : (a -> Int32) -> ToIntFunction a
toInt f = makeToIntFunction f

/**
 * Creates a `java.util.function.BinaryOperator` out of this function.
 */
pub
binaryOperator : (a -> a -> a) -> BinaryOperator a
binaryOperator f = makeBinaryOperator f

/**
 * Creates a `java.util.function.UnaryOperator` out of this function.
 */
pub
unaryOperator : (a -> a) -> UnaryOperator a
unaryOperator f = makeUnaryOperator f

/**
 * Creates a `java.util.function.BiFunction` out of this function.
 */
pub
biFunction : (a -> b -> c) -> BiFunction a b c
biFunction f = makeBiFunction f